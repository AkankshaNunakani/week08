# .github/workflows/backend_ci.yml
name: Backend CI - Test, Build and Push Image

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/**"
  pull_request:
    branches: [development]
    paths:
      - "backend/**"
      - ".github/workflows/**"

permissions:
  contents: read
  id-token: write   # REQUIRED for OIDC

jobs:
  test_build_push:
    runs-on: ubuntu-latest
    # Only run if Azure IDs are present (keeps CI green in class envs)
    if: ${{ vars.AZURE_CLIENT_ID && vars.AZURE_TENANT_ID && vars.AZURE_SUBSCRIPTION_ID }}
    steps:
      - uses: actions/checkout@v4

      # *** OIDC login (no secrets) ***
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Set subscription
        run: az account show

      - name: Login docker to ACR (token-based)
        env:
          ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
        run: |
          : "${ACR_LOGIN_SERVER?Set repository variable ACR_LOGIN_SERVER like myacr.azurecr.io}"
          az acr login --name "${ACR_LOGIN_SERVER%%.azurecr.io}"

      - name: Find Dockerfiles (order + product)
        run: |
          find backend -name Dockerfile -maxdepth 3 || true

      - name: Build & push order-service (Docker)
        env:
          ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
        run: |
          : "${ACR_LOGIN_SERVER?Set ACR_LOGIN_SERVER repo variable}"
          docker build -t "$ACR_LOGIN_SERVER/order-service:${GITHUB_SHA::7}" backend/order_service
          docker push "$ACR_LOGIN_SERVER/order-service:${GITHUB_SHA::7}"

      - name: Build & push product-service (Docker)
        env:
          ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
        run: |
          : "${ACR_LOGIN_SERVER?Set ACR_LOGIN_SERVER repo variable}"
          docker build -t "$ACR_LOGIN_SERVER/product-service:${GITHUB_SHA::7}" backend/product_service
          docker push "$ACR_LOGIN_SERVER/product-service:${GITHUB_SHA::7}"

  # Friendly note if Azure vars aren’t set
  backend_skipped_note:
    runs-on: ubuntu-latest
    if: ${{ !(vars.AZURE_CLIENT_ID && vars.AZURE_TENANT_ID && vars.AZURE_SUBSCRIPTION_ID) }}
    steps:
      - run: |
          echo "Skipping backend build/push: set AZURE_CLIENT_ID / AZURE_TENANT_ID / AZURE_SUBSCRIPTION_ID (Actions → Variables)."
