name: CI Frontend and Backend

on:
  pull_request:
    branches: [development]
  push:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write
  packages: write

# avoid duplicate runs for the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changed paths
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          # adjust these globs if your folders are named differently
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  build_frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: changes
    if: |
      (github.event_name == 'pull_request' && needs.changes.outputs.frontend == 'true') ||
      (github.event_name == 'push' && github.ref_name == 'main' && needs.changes.outputs.frontend == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: Frontend checks / build (placeholder)
        run: |
          echo "Detected changes in frontend/"
          echo "Run your real build here (e.g., npm ci && npm run build)."

  build_backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: changes
    if: |
      (github.event_name == 'pull_request' && needs.changes.outputs.backend == 'true') ||
      (github.event_name == 'push' && github.ref_name == 'main' && needs.changes.outputs.backend == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: Backend checks / build (placeholder)
        run: |
          echo "Detected changes in backend/"
          echo "Run your real build here (e.g., build & tests for your service)."
