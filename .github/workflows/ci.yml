name: CI Frontend and Backend

on:
  pull_request:
    branches: [development]
    paths:
      - "frontend/**"
      - "backend/**"
      - ".github/workflows/**"
  push:
    branches: [main]
    paths:
      - "frontend/**"
      - "backend/**"
      - ".github/workflows/**"
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  detect_changed_paths:
    name: Detect changed paths
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend:  ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  build_frontend:
    name: Build Frontend
    needs: detect_changed_paths
    if: ${{ needs.detect_changed_paths.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          cd frontend
          npm ci
      - name: Build
        run: |
          cd frontend
          npm run build

  build_and_push_backend:
    name: Build & Push Backend (Docker)
    needs: detect_changed_paths
    if: ${{ needs.detect_changed_paths.outputs.backend == 'true' && vars.AZURE_CLIENT_ID && vars.AZURE_TENANT_ID && vars.AZURE_SUBSCRIPTION_ID }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: List backend Dockerfiles
        run: |
          find backend -name "Dockerfile" -maxdepth 2 || true

      - name: Build & push order-service
        run: |
          set -e
          : "${ACR_LOGIN_SERVER?Need env ACR_LOGIN_SERVER (e.g. wk08acr123.azurecr.io)}"
          az acr login --name "${ACR_LOGIN_SERVER%%.azurecr.io}"
          docker build -t "$ACR_LOGIN_SERVER/order-service:${GITHUB_SHA::7}" backend/order_service
          docker push "$ACR_LOGIN_SERVER/order-service:${GITHUB_SHA::7}"

      - name: Build & push product-service
        run: |
          set -e
          : "${ACR_LOGIN_SERVER?Need env ACR_LOGIN_SERVER (e.g. wk08acr123.azurecr.io)}"
          az acr login --name "${ACR_LOGIN_SERVER%%.azurecr.io}"
          docker build -t "$ACR_LOGIN_SERVER/product-service:${GITHUB_SHA::7}" backend/product_service
          docker push "$ACR_LOGIN_SERVER/product-service:${GITHUB_SHA::7}"

  backend_skipped_note:
    name: Backend skipped (no Azure vars)
    needs: detect_changed_paths
    if: ${{ needs.detect_changed_paths.outputs.backend == 'true' && !(vars.AZURE_CLIENT_ID && vars.AZURE_TENANT_ID && vars.AZURE_SUBSCRIPTION_ID) }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Backend changed but Azure variables are not all set."
          echo "Skipping backend build/push to keep CI green for the assignment."
